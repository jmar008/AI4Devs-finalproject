version: "3.8"

services:
  # Base de datos PostgreSQL con pgvector
  db:
    image: ankane/pgvector:latest
    container_name: dealaai_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-dealaai_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${DB_NAME:-dealaai_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dealaai_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: dealaai_redis
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dealaai_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: dealaai-backend:latest
    container_name: dealaai_backend
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=dealaai.settings.production
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-dealaai_dev}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
      - DEBUG=${DEBUG:-False}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,backend,nginx}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-me}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
    volumes:
      - ./backend:/app:cached
      - ./media:/app/media
      - ./static:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dealaai_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: dealaai-frontend:latest
    container_name: dealaai_frontend
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost}
      - NEXT_PUBLIC_ENVIRONMENT=production
      - NODE_ENV=production
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
      - /app/.next
    expose:
      - "3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dealaai_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: dealaai_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./static:/var/www/static:ro
      - ./media:/var/www/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - FRONTEND_HOST=frontend
      - BACKEND_HOST=backend
      - FRONTEND_PORT=3000
      - BACKEND_PORT=8000
    depends_on:
      - frontend
      - backend
    healthcheck:
      test:
        ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - dealaai_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PgAdmin para gestión de base de datos (opcional en producción)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dealaai_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@dealaai.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_PROXY_X_FORWARDED_PROTO: "https"
      PGADMIN_CONFIG_PROXY_X_FORWARDED_FOR: "X-Forwarded-For"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    expose:
      - "80"
    depends_on:
      - db
    networks:
      - dealaai_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  dealaai_network:
    driver: bridge
